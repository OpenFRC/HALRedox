language: rust

sudo: required
dist: trusty

before_install:
  - curl https://sh.rustup.rs -sSf > rustup.sh
  - chmod +x rustup.sh
  - ./rustup.sh -y
  - export PATH=$HOME/.cargo/bin:$PATH

addons:
  apt:
    sources:
      - sourceline: 'ppa:wpilib/toolchain'
      - kalakris-cmake
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - binutils-dev
      - cmake
      - frc-toolchain
      - libbfd-dev
      - qemu

install:
  - source ~/.cargo/env
  - rustup target add arm-unknown-linux-gnueabi
  - ./on_nightly rustup override set nightly
  - ./on_nightly cargo install clippy
  #- echo "[target.arm-unknown-linux-gnueabi]" >> ~/.cargo/config
  #- echo 'linker = "arm-frc-linux-gnueabi-gcc"' >> ~/.cargo/config

rust:
  - stable
  - beta
  - nightly
matrix:
  allow_failures:
    - rust: nightly

before_script:
  - pip install 'travis-cargo' && export PATH=$HOME/.local/bin:$PATH && export PATH=$HOME/.cargo/bin:$PATH

script:
  - cd frcredox; cargo rustc --verbose
  - cd frcredox; env CC="arm-frc-linux-gnueabi-gcc" cargo rustc --verbose --target=arm-unknown-linux-gnueabi && cd ../

after_success:
  - wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
  - tar xzf master.tar.gz && mkdir kcov-master/build && cd kcov-master/build &&
  - cmake -DCMAKE_INSTALL_PREFIX:PATH=$LOCAL .. && make &&
  - make install && cd ../.. &&
  - for file in target/debug/libhalredox.rlib; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file";
  - bash <(curl -s https://codecov.io/bash) &&
  - echo "Uploaded code coverage"
